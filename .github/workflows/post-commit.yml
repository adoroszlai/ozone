# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build-branch
on:
  push:
env:
  FAIL_FAST: ${{ github.event_name == 'pull_request' }}
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3
concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Cache for npm dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Maven repo before build
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort
        continue-on-error: true

      - name: Run a full build
        run: hadoop-ozone/dev-support/checks/build.sh -Pcoverage -Pdist --debug
      - name: Maven repo after build
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort

      - name: Run rat
        run: hadoop-ozone/dev-support/checks/rat.sh
      - name: Maven repo after rat
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort

      - name: Run checkstyle
        run: hadoop-ozone/dev-support/checks/checkstyle.sh
      - name: Maven repo after checkstyle
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort

      - name: Run findbugs
        run: hadoop-ozone/dev-support/checks/findbugs.sh
      - name: Maven repo after findbugs
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort

      - name: Run unit
        run: hadoop-ozone/dev-support/checks/unit.sh
      - name: Maven repo after unit
        run: find ~/.m2/repository -name '*.jar' | cut -c3- | sort

      - name: Delete temporary build artifacts
        run: rm -fr ~/.m2/repository/org/apache/ozone
        if: always()
